import React, { useState } from "react";

// Weekday names for dropdown and logic
const WEEK_DAYS = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

function WeeklyEventPlanner() {
  const [initialDate, setInitialDate] = useState("");
  const [selectedDay, setSelectedDay] = useState("Monday");
  const [repeatCount, setRepeatCount] = useState(1);
  const [rangeStart, setRangeStart] = useState("");
  const [rangeEnd, setRangeEnd] = useState("");
  const [eventList, setEventList] = useState([]);

  // Determine if a date is within the view range
  const isWithinRange = (date) => {
    if (!rangeStart || !rangeEnd) return true;
    const timestamp = date.getTime();
    return (
      new Date(rangeStart).getTime() <= timestamp &&
      timestamp <= new Date(rangeEnd).getTime()
    );
  };

  // Generate weekly event instances
  const createEventInstances = () => {
    if (!initialDate || !selectedDay || !repeatCount) return;

    const baseDate = new Date(initialDate);
    const targetDayIndex = WEEK_DAYS.indexOf(selectedDay);
    const instanceDates = [];

    const dayOffset = (targetDayIndex - baseDate.getDay() + 7) % 7;
    let currentDate = new Date(baseDate);
    currentDate.setDate(baseDate.getDate() + dayOffset);

    for (let i = 0; i < repeatCount; i++) {
      instanceDates.push(new Date(currentDate));
      currentDate.setDate(currentDate.getDate() + 7);
    }

    setEventList(instanceDates);
  };

  return (
    <div style={{ padding: "20px", fontFamily: "Segoe UI" }}>
      <h2>Simple Weekly Event Scheduler</h2>

      <div>
        <label>Start Date: </label>
        <input
          type="date"
          value={initialDate}
          onChange={(e) => setInitialDate(e.target.value)}
        />
      </div>

      <div>
        <label>Recurring Day: </label>
        <select
          value={selectedDay}
          onChange={(e) => setSelectedDay(e.target.value)}
        >
          {WEEK_DAYS.map((day) => (
            <option key={day} value={day}>
              {day}
            </option>
          ))}
        </select>
      </div>

      <div>
        <label>Total Occurrences: </label>
        <input
          type="number"
          min="1"
          value={repeatCount}
          onChange={(e) => setRepeatCount(Number(e.target.value))}
        />
      </div>

      <div>
        <label>View From: </label>
        <input
          type="date"
          value={rangeStart}
          onChange={(e) => setRangeStart(e.target.value)}
        />
      </div>

      <div>
        <label>View To: </label>
        <input
          type="date"
          value={rangeEnd}
          onChange={(e) => setRangeEnd(e.target.value)}
        />
      </div>

      <button onClick={createEventInstances} style={{ marginTop: "10px" }}>
        Generate Events
      </button>

      <h3>Scheduled Dates</h3>
      <ul>
        {eventList.map((eventDate, idx) => {
          const visible = isWithinRange(eventDate);
          return (
            <li
              key={idx}
              style={{
                color: visible ? "black" : "gray",
                fontStyle: visible ? "normal" : "italic",
              }}
            >
              {eventDate.toDateString()}
            </li>
          );
        })}
      </ul>
    </div>
  );
}

export default WeeklyEventPlanner;
